#!/usr/bin/php5
<?php

require_once __DIR__.'/../vendor/autoload.php';

use Doctrine\ORM\Tools\Setup;
use Doctrine\ORM\EntityManager;
use Doctrine\ORM\Events;
use Doctrine\Common\EventManager;
use Doctrine\Common\ClassLoader;
use Symfony\Component\Console\Application;

$listenerLoader = new ClassLoader('Listener', 'src');
$listenerLoader->register();
$listenerLoader->loadClass('Listener\FlushListener');

$consoleCommandLoader = new ClassLoader('ConsoleCommand', 'src');
$consoleCommandLoader->register();
$consoleCommandLoader->loadClass('ConsoleCommand\AddProductCommand');
$consoleCommandLoader->loadClass('ConsoleCommand\ShowOrderProductCommand');
$consoleCommandLoader->loadClass('ConsoleCommand\AddOrderProductCommand');
$consoleCommandLoader->loadClass('ConsoleCommand\DelOrderProductCommand');
$consoleCommandLoader->loadClass('ConsoleCommand\ListProductCommand');
$consoleCommandLoader->loadClass('ConsoleCommand\ShowOrderCommand');
$consoleCommandLoader->loadClass('ConsoleCommand\ExpensiveProductCommand');

$repositoryLoader = new ClassLoader('Repository', 'src');
$repositoryLoader->register();
$repositoryLoader->loadClass('Repository\OrderRepository');
$repositoryLoader->loadClass('Repository\OrderProductRepository');

$path = array(__DIR__.'/src/Entity');
$isDevMode = true;

$dbParams = array(
    'driver' => 'pdo_mysql',
    'user' => 'root',
    'password' => 'root',
    'dbname' => 'shop-doctrine',
);

$eventManager = new EventManager();
$eventManager->addEventListener(array(Events::onFlush), new FlushListener());

$config = Setup::createAnnotationMetadataConfiguration($path, $isDevMode);
$entityManager = EntityManager::create($dbParams, $config, $eventManager);
global $entityManager;

$application = new Application();
$application->add(new AddProductCommand());
$application->add(new ShowOrderProductCommand());
$application->add(new AddOrderProductCommand());
$application->add(new DelOrderProductCommand());
$application->add(new ListProductCommand());
$application->add(new ShowOrderCommand());
$application->add(new ExpensiveProductCommand());
$application->run();